artifact_path: best_rf_model
flavors:
  python_function:
    env:
      conda: conda.yaml
      virtualenv: python_env.yaml
    loader_module: mlflow.sklearn
    model_path: model.pkl
    predict_fn: predict
    python_version: 3.12.7
  sklearn:
    code: null
    pickled_model: model.pkl
    serialization_format: cloudpickle
    sklearn_version: 1.6.1
mlflow_version: 2.19.0
model_size_bytes: 2242072
model_uuid: a3d140be53994683a670a736eeec5cb0
run_id: bcf5abe957de4672b590286acd0c1b12
saved_input_example_info:
  artifact_path: input_example.json
  pandas_orient: split
  serving_input_path: serving_input_example.json
  type: dataframe
signature:
  inputs: '[{"type": "double", "name": "Temperature", "required": true}, {"type":
    "double", "name": "Humidity", "required": true}, {"type": "double", "name": "PM2.5",
    "required": true}, {"type": "double", "name": "PM10", "required": true}, {"type":
    "double", "name": "NO2", "required": true}, {"type": "double", "name": "SO2",
    "required": true}, {"type": "double", "name": "CO", "required": true}, {"type":
    "double", "name": "Proximity_to_Industrial_Areas", "required": true}, {"type":
    "double", "name": "Population_Density", "required": true}]'
  outputs: '[{"type": "tensor", "tensor-spec": {"dtype": "int64", "shape": [-1]}}]'
  params: null
utc_time_created: '2025-05-20 20:21:35.837618'
